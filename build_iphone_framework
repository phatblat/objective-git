#!/bin/zsh

TARGET_NAME="iPhone-ObjectiveGit"
HEADER_FILES=(Classes/**/*.h)
PLIST_FILES="Info.plist"

# First, build the device and simulator versions
xcodebuild -configuration Release -target "$TARGET_NAME" -sdk iphoneos clean build
xcodebuild -configuration Release -target "$TARGET_NAME" -sdk iphonesimulator clean build

FRAMEWORK_NAME=objectiveGit-iphone
FRAMEWORK_VERSION=A
FRAMEWORK_CURRENT_VERSION=0.1
FRAMEWORK_COMPATIBILITY_VERSION=0.1
BUILD_TYPE=Release

# This is the full name of the framework we'll  build
FRAMEWORK_DIR=$FRAMEWORK_NAME.framework

# Clean any existing framework that might be there already
[ -d "$FRAMEWORK_DIR" ] && \
  rm -rf "$FRAMEWORK_DIR"

# Build the canonical Framework bundle directory structure
mkdir -p $FRAMEWORK_DIR
mkdir -p $FRAMEWORK_DIR/Versions
mkdir -p $FRAMEWORK_DIR/Versions/$FRAMEWORK_VERSION
mkdir -p $FRAMEWORK_DIR/Versions/$FRAMEWORK_VERSION/Resources
mkdir -p $FRAMEWORK_DIR/Versions/$FRAMEWORK_VERSION/Headers

ln -s $FRAMEWORK_VERSION $FRAMEWORK_DIR/Versions/Current
ln -s Versions/Current/Headers $FRAMEWORK_DIR/Headers
ln -s Versions/Current/Resources $FRAMEWORK_DIR/Resources
ln -s Versions/Current/$FRAMEWORK_NAME $FRAMEWORK_DIR/$FRAMEWORK_NAME

# Check that this is what your static libraries are called
FRAMEWORK_INPUT_ARM_FILES="build/$BUILD_TYPE-iphoneos/lib$FRAMEWORK_NAME.a"
FRAMEWORK_INPUT_I386_FILES="build/$BUILD_TYPE-iphonesimulator/lib$FRAMEWORK_NAME.a"

# The trick for creating a fully usable library is to use lipo to glue the
# different library versions together into one file. When an application is
# linked to this library, the linker will extract the appropriate platform
# version and use that. The library file is given the same name as the
lipo \
  "$FRAMEWORK_INPUT_ARM_FILES" \
  -create \
  -arch i386 "$FRAMEWORK_INPUT_I386_FILES" \
  -o "$FRAMEWORK_DIR/Versions/Current/$FRAMEWORK_NAME"

# Now copy the assets over (i.e. public header files and plist files)
cp $HEADER_FILES $FRAMEWORK_DIR/Headers/
cp $PLIST_FILES $FRAMEWORK_DIR/Resources/Info.plist

echo "Framework create! Located at $FRAMEWORK_DIR"
